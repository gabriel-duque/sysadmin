# This is the docker-compose.yml file for our whole infrastructure
version: "3.5"

services:

    # This is our Traefik reverse-proxy
    ditto:
        image: traefik:latest
        container_name: ditto
        command:
            # Dashboard stuff
            - "--api.dashboard=true"

            # Enable Docker discovery
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.websecure.address=:443"
            - "--entrypoints.web.address=:80"

            # Our certificate resolvers (let's encrypt acme API)
            - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
            - "--certificatesresolvers.mytlschallenge.acme.email=gabriel.duque@lse.epita.fr"
            - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"

        # Expose ports for endpoints
        ports:
            - "80:80"
            - "443:443"

        volumes:
            # Needed for certificate handling
            - "/letsencrypt:/letsencrypt"

            # Needed for Docker container discovery
            - "/var/run/docker.sock:/var/run/docker.sock:ro"

        # This service depends on all the others
        depends_on:
            - gengar
            - lapras

        networks:
            hoenn:
                aliases:
                    - "ditto"

        labels:
            # Traefik service is handled by Traefik ¯\_(ツ)_/¯
            - "traefik.enable=true"

            # Create a middle ware to redirect http -> https
            - "traefik.http.middlewares.http2https.redirectscheme.scheme=https"
            - "traefik.http.middlewares.http2https.redirectscheme.port=443"

            # Authentication middleware for ditto
            - "traefik.http.middlewares.ditto-auth.basicauth.users=${TRAEFIK_USER?please set TRAEFIK_USER}:${TRAEFIK_PASS?please set TRAEFIK_PASS}"

            # Setup http router which is redirected to https
            - "traefik.http.routers.ditto_web.rule=Host(`traefik.zuh0.com`)"
            - "traefik.http.routers.ditto_web.entryPoints=web"
            - "traefik.http.routers.ditto_web.middlewares=http2https"

            # Setup the actual https router and it's certresolver
            - "traefik.http.routers.ditto.rule=Host(`traefik.zuh0.com`)"
            - "traefik.http.routers.ditto.entrypoints=websecure"
            - "traefik.http.routers.ditto.tls=true"
            - "traefik.http.routers.ditto.tls.certresolver=mytlschallenge"

            # Set the service to api internal	
            - "traefik.http.routers.ditto.service=api@internal"
            - "traefik.http.routers.ditto.middlewares=ditto-auth"

    # This is our git server
    gengar:
        image: zuh0/gengar:latest
        container_name: gengar
        networks:
            hoenn:
                aliases:
                    - "gengar"
        ports:
            - "22:22"
        volumes:
            - "gengar-repos:/srv/git:rw"
        labels:
            # Enable Traefik for this service
            - "traefik.enable=true"

            # Setup http router which is redirected to https
            - "traefik.http.routers.gengar_web.rule=Host(`git.zuh0.com`)"
            - "traefik.http.routers.gengar_web.entrypoints=web"
            - "traefik.http.routers.gengar_web.middlewares=http2https"

            # Setup the actual https router and it's certresolver
            - "traefik.http.routers.gengar.rule=Host(`git.zuh0.com`)"
            - "traefik.http.routers.gengar.entrypoints=websecure"
            - "traefik.http.routers.gengar.tls=true"
            - "traefik.http.routers.gengar.tls.certresolver=mytlschallenge"

            - "traefik.http.services.gengar.loadbalancer.server.port=80"

    # This is our file sharing service
    lapras:
        image: zuh0/lapras:latest
        container_name: lapras
        networks:
            hoenn:
                aliases:
                    - "lapras"
        volumes:
            lapras-objects:
                name: "lapras-objects"
        labels:
            # Enable Traefik for this service
            - "traefik.enable=true"

            # Authentication middleware for lapras
            - "traefik.http.middlewares.lapras-auth.basicauth.users=${LAPRAS_USER?please set LAPRAS_USER}:${LAPRAS_PASS?please set LAPRAS_PASS}"

            # Setup http router which is redirected to https
            - "traefik.http.routers.lapras_web.rule=Host(`files.zuh0.com`)"
            - "traefik.http.routers.lapras_web.entrypoints=web"
            - "traefik.http.routers.lapras_web.middlewares=http2https"

            # Setup the actual https router and it's certresolver
            - "traefik.http.routers.lapras.rule=Host(`files.zuh0.com`)"
            - "traefik.http.routers.lapras.entrypoints=websecure"
            - "traefik.http.routers.lapras.tls=true"
            - "traefik.http.routers.lapras.tls.certresolver=mytlschallenge"
            - "traefik.http.routers.lapras.middlewares=lapras-auth"

volumes:
    gengar-repos:
        name: "gengar-repos"
    lapras-objects:
        name: "lapras-objects"

networks:
    hoenn:
        name: "hoenn"
